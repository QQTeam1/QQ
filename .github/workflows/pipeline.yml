name: Build project

on: [push, pull_request]
  
jobs:
    buildForAllSupportedPlatforms:
        name: Build for ${{ matrix.targetPlatform }}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                targetPlatform:
                    - StandaloneWindows64 # Build a Windows 64-bit standalone.
                    - Android
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  lfs: true

            - name: Build project
              run: mv NightMaze/* .

            - uses: game-ci/unity-builder@v4
              env:
                  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
                  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
                  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
                  allowDirtyBuild: true
              with:
                  targetPlatform: ${{ matrix.targetPlatform }}

            - uses: actions/upload-artifact@v2
              with:
                  name: Build-${{ matrix.targetPlatform }}
                  path: build/${{ matrix.targetPlatform }}
                  allowDirtyBuild: true

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: eu-north-1 

            - name: Upload to S3
              run: |
                aws s3 sync build s3://qqteam/NightMaze/DevelopBuild/
    SonarQube:
        name: SonarQube
        runs-on: windows-latest
        permissions: read-all
        steps:
          - uses: actions/checkout@v2
            with:
              fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          - name: Set up JDK 17
            uses: actions/setup-java@v1
            with:
              java-version: 17
          - name: Cache SonarQube packages
            uses: actions/cache@v1
            with:
              path: ~\.sonar\cache
              key: ${{ runner.os }}-sonar
              restore-keys: ${{ runner.os }}-sonar
          - name: Cache SonarQube scanner
            id: cache-sonar-scanner
            uses: actions/cache@v1
            with:
              path: .\.sonar\scanner
              key: ${{ runner.os }}-sonar-scanner
              restore-keys: ${{ runner.os }}-sonar-scanner
          - name: Install SonarQube scanner
            if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
            shell: powershell
            run: |
              New-Item -Path .\.sonar\scanner -ItemType Directory
              dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          - name: Build and analyze
            shell: powershell
            run: |
              .\.sonar\scanner\dotnet-sonarscanner begin /k:"QQ/NightMaze/NightMaze.sln" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
              dotnet build
              .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"